name: CI

on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master
  pull_request_review_comment:
    types: [created, edited, deleted]

jobs:
  lint-dockerfile:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Lint Dockerfile
        uses: brpaz/hadolint-action@master
        with:
          dockerfile: "Dockerfile"

  prettier:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v1
        with:
          node-version: "12.x"

      - name: Install dependencies
        run: npm install prettier@2.0.5

      - name: Run Prettier
        run: ./node_modules/.bin/prettier --check --ignore-path .gitignore "./**/*.{md,yml}"

  lint-python:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1

      - uses: actions/setup-python@v1
        with:
          python-version: 3.7

      - uses: actions/cache@v1
        with:
          path: ~/.cache/pip
          key: >
            ${{ runner.os }}-pip-
            ${{ hashFiles('**/requirements.txt') }}-
            ${{ hashFiles('**/requirements-dev.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - run: ./dev/install.sh

      - run: pip install --progress-bar off -e .flake8_extensions

      - run: flake8 .

      - run: isort --check-only .

      - run: black --check .

  mypy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1

      - uses: actions/setup-python@v1
        with:
          python-version: 3.7

      - uses: actions/cache@v1
        with:
          path: ~/.cache/pip
          key: >
            ${{ runner.os }}-pip-
            ${{ hashFiles('**/requirements.txt') }}-
            ${{ hashFiles('**/requirements-dev.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - run: ./dev/install.sh
      - run: mypy .

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8]
    steps:
      - uses: actions/checkout@v1

      - uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}

      - uses: actions/cache@v1
        with:
          path: ~/.cache/pip
          key: >
            ${{ runner.os }}-pip-
            ${{ hashFiles('**/requirements.txt') }}-
            ${{ hashFiles('**/requirements-dev.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - run: ./dev/install.sh

      - run: ./dev/test.sh

  codecov:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1

      - uses: actions/setup-python@v1
        with:
          python-version: 3.7

      - uses: actions/cache@v1
        with:
          path: ~/.cache/pip
          key: >
            ${{ runner.os }}-pip-
            ${{ hashFiles('**/requirements.txt') }}-
            ${{ hashFiles('**/requirements-dev.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - run: ./dev/install.sh

      - run: ./dev/test.sh

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          file: ./coverage.xml
          name: ${{ runner.os }}-3.7
          fail_ci_if_error: true

  install:
    # Verify installation does not fail
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1

      - uses: actions/setup-python@v1
        with:
          python-version: 3.7

      - run: pip install --progress-bar off -e .

  wheel:
    # Verify building wheel does not fail
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1

      - uses: actions/setup-python@v1
        with:
          python-version: 3.7

      - run: ./dev/install.sh

      - run: python setup.py bdist_wheel
